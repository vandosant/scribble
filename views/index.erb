<div class="container">
  <div class="title">Scribble</div>
  <div class="label" id="volume-label">Keyboard Volume</div>
  <input type="range" min="0" max="100" value="100" class="keyboard-volume">

  <div class="label" id="volume-label">Drum Volume</div>
  <input type="range" min="0" max="100" value="100" class="drum-volume">
</div>

<div class="oscillator-container">

  <div class="oscillator">
    Oscillator 1
    <div class="form-row">
      <select name="osc1" class="oscillator-wave" id="1">
        <option selected="selected" value="sine">Sine</option>
        <option value="square">Square</option>
        <option value="sawtooth">Sawtooth</option>
        <option value="triangle">Triangle</option>
      </select>
    </div>
  </div>
  <div class="oscillator">
    Oscillator 2
    <div class="form-row">
      <select class="oscillator-wave" id="2">
        <option selected="selected" value="sine">Sine</option>
        <option value="square">Square</option>
        <option value="sawtooth">Sawtooth</option>
        <option value="triangle">Triangle</option>
      </select>
    </div>
  </div>
  <div class="oscillator">
    Oscillator 3
    <div class="form-row">
      <select class="oscillator-wave" id="3">
        <option value="sine">Sine</option>
        <option value="square">Square</option>
        <option value="sawtooth">Sawtooth</option>
        <option selected="selected" value="triangle">Triangle</option>
      </select>
    </div>
  </div>
</div>


<div class="keyboard">
  <div class="key" id="key-A"></div>
  <div class="black-key" id="key-W"></div>
  <div class="key" id="key-S"></div>
  <div class="black-key" id="key-E"></div>
  <div class="key" id="key-D"></div>
  <div class="key" id="key-F"></div>
  <div class="black-key" id="key-T"></div>
  <div class="key" id="key-G"></div>
  <div class="black-key" id="key-Y"></div>
  <div class="key" id="key-H"></div>
  <div class="black-key" id="key-U"></div>
  <div class="key" id="key-J"></div>
  <div class="key" id="key-K"></div>
</div>

<div class="drum-machine" id="drums"></div>

<div class="drum-machine" id="drum-types">
</div>

<div class="drum-machine" id="drum-properties">
  <ul>
    <li>
      <div id="drum-status"></div>
    </li>
    <li>
      <div class="label" id="tempo-label">Tempo</div>
      <input type="number" value="120" id="tempo">
    </li>
  </ul>
</div>

<script>
  var context;
  var setContext = (function () {
    var contextClass = (window.AudioContext ||
      window.webkitAudioContext ||
      window.mozAudioContext ||
      window.oAudioContext ||
      window.msAudioContext);
    if (contextClass) {
      context = new contextClass();
    } else {
      $(document).append('<div class="errors">Sorry, your browser is not supported.</div>');
    }
  }());

  var volumeSelector = ".keyboard-volume";
  var keyboard = new Keyboard({volumeSelector: volumeSelector});
  keyboard.initialize();

  var initialFrequency = 261.63;
  var initialVolume = 0;
  var oscillators = [];
  var OscillatorController = new OscillatorController(oscillators, initialFrequency, initialVolume);
  OscillatorController.initialize();

  var drumVol = 1.3;
  var drumMachine = new DrumMachine(context);
  var drums = {
    'bass': {
      'machine': new DrumMachine(context, 47, 'sine', drumVol, 0.03),
      'selected': false
    },
    'tom1': {
      'machine': new DrumMachine(context, 64, 'sine', drumVol, 0.05),
      'selected': false
    },
    'tom2': {
      'machine': new DrumMachine(context, 160, 'sine', drumVol, 0.05),
      'selected': false
    },
    'snare': {
      'machine': new DrumMachine(context, 188, 'sine', drumVol, 0.07),
      'selected': false
    },
    'pad': {
      'machine': new DrumMachine(context, 261.63, 'triangle', drumVol, 0.02),
      'selected': false
    }
  };

  var drumCtlr = new DrumController(drums, '#drums', 180, drumVol);
  drumCtlr.render();
  drumCtlr.selectDrum('#bass');
  drumCtlr.start('#drum-status');

  $('#tempo').change(function () {
    drumCtlr.setTempo($(this).val());
  });

  $('.drum-button').click(function () {
    drumCtlr.selectBeat(this);
  });

  $('.drum-type').click(function () {
    drumCtlr.selectDrum(this);
  });

  $('#drum-status').click(function () {
    var $this = $(this);
    if ($this.hasClass('active') === true) {
      drumCtlr.stop('#drum-status');
    } else {
      drumCtlr.start('#drum-status');
    }
  });

  $('.drum-volume').change(function (e) {
    var volumeModifier = (this.value / 100);
    drumCtlr.setVolume(volumeModifier);
  });
</script>
