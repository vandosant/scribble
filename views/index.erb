<div class="container">
  <div class="title">Scribble</div>
  <div class="label" id="volume-label">Keyboard Volume</div>
  <input type="range" min="0" max="100" value="100" id="keyboard-volume">

  <div class="label" id="volume-label">Drum Volume</div>
  <input type="range" min="0" max="100" value="100" id="drum-volume">
</div>

<div class="oscillator-container">

  <div class="oscillator">
    Oscillator 1
    <div class="form-row">
      <select name="osc1" class="oscillator-wave" id="1">
        <option selected="selected" value="sine">Sine</option>
        <option value="square">Square</option>
        <option value="sawtooth">Sawtooth</option>
        <option value="triangle">Triangle</option>
      </select>
    </div>
  </div>
  <div class="oscillator">
    Oscillator 2
    <div class="form-row">
      <select class="oscillator-wave" id="2">
        <option selected="selected" value="sine">Sine</option>
        <option value="square">Square</option>
        <option value="sawtooth">Sawtooth</option>
        <option value="triangle">Triangle</option>
      </select>
    </div>
  </div>
  <div class="oscillator">
    Oscillator 3
    <div class="form-row">
      <select class="oscillator-wave" id="3">
        <option value="sine">Sine</option>
        <option value="square">Square</option>
        <option value="sawtooth">Sawtooth</option>
        <option selected="selected" value="triangle">Triangle</option>
      </select>
    </div>
  </div>
  <div id="mode" class="oscillator-modes">
    Keys Mode
    <div class="form-row">
      <select class="oscillator-mode">
        <option value="standard" selected="selected">Default</option>
        <option value="raspy">Rasp</option>
        <option value="game">Game</option>
        <option value="organ">Organ</option>
      </select>
    </div>
  </div>
</div>


<div class="keyboard">
  <div class="key" id="key-A"></div>
  <div class="black-key" id="key-W"></div>
  <div class="key" id="key-S"></div>
  <div class="black-key" id="key-E"></div>
  <div class="key" id="key-D"></div>
  <div class="key" id="key-F"></div>
  <div class="black-key" id="key-T"></div>
  <div class="key" id="key-G"></div>
  <div class="black-key" id="key-Y"></div>
  <div class="key" id="key-H"></div>
  <div class="black-key" id="key-U"></div>
  <div class="key" id="key-J"></div>
  <div class="key" id="key-K"></div>
</div>

<div class="drum-machine" id="drums"></div>

<div class="drum-machine" id="drum-types">
</div>

<div class="drum-machine" id="drum-properties">
  <ul>
    <li>
      <div id="drum-status"></div>
    </li>
    <li>
      <div class="label" id="tempo-label">Tempo</div>
      <input type="number" value="120" id="tempo">
    </li>
  </ul>
</div>
<script>
  var context = (function () {
    var contextClass = (window.AudioContext ||
    window.webkitAudioContext ||
    window.mozAudioContext ||
    window.oAudioContext ||
    window.msAudioContext);
    if (contextClass) {
      return new contextClass();
    } else {
      $(document).append('<div class="errors">Sorry, your browser is not supported.</div>');
      return undefined;
    }
  }());

  var keyboard = keyboard({volumeSelector: ".keyboard-volume"});
  keyboard.initialize();

  var oscillatorCtrl = oscillatorController({
    oscillators: [],
    initialVolume: 0,
    initialFrequency: 261.63,
    oscillatorSelector: '.oscillator-wave'
  });
  oscillatorCtrl.initialize();

  var drumVol = 1.3;
  var drums = {
    'bass': {
      'machine': drumMachine({context: context, frequency: 47, wave: 'sine', gainVal: drumVol, sustain: 0.03})
    },
    'tom1': {
      'machine': drumMachine({context: context, frequency: 64, wave: 'sine', gainVal: drumVol, sustain: 0.05})
    },
    'tom2': {
      'machine': drumMachine({context: context, frequency: 160, wave: 'sine', gainVal: drumVol, sustain: 0.05})
    },
    'snare': {
      'machine': drumMachine({context: context, frequency: 188, wave: 'sine', gainVal: drumVol, sustain: 0.07})
    },
    'pad': {
      'machine': drumMachine({context: context, frequency: 261.63, wave: 'triangle', gainVal: drumVol, sustain: 0.02})
    }
  };

  var drumController = DrumController(drums, '#drums', 180, drumVol);
  drumController.render();
  drumController.selectDrum('#bass');
  drumController.start('#drum-status');
  drumController.listen('#tempo', '.drum-button', '.drum-type', '#drum-status', '.drum-volume');

  var modes = {
    standard: ['sine', 'sine', 'triangle'],
    raspy: ['sine', 'square', 'sawtooth'],
    organ: ['sine', 'sine', 'sine'],
    game: ['square', 'sine', 'triangle']
  };

  $('.oscillator-mode').change(function () {
    var mode = $(this).val();
    oscillatorCtrl.update(modes[mode]);

    $('.oscillator-wave').each(function (oscSelector) {
      $(this).val(modes[mode][oscSelector])
    });
  });

</script>